Merge two sorted linked lists and return it as a new list. 
The new list should be made by splicing together the nodes of the first two lists.

class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        //define pointers for both the list 
        ListNode p1 = l1;
        ListNode p2 = l2;
        
        //Create fakehead for third merged list 
        ListNode fh = new ListNode(0);
        ListNode p = fh; // pointer to traverse this third list
        
        //if any of the two lists are null return the other list 
        if(p1==null){
            return p2;
        }
        if(p2==null){
            return p1;
        }
        
        //start merging till any of the list end is reached 
        while(p1!=null && p2!=null){
            if(p1.val<p2.val){
                p.next = p1;
                p1=p1.next;
            }
            else{
                p.next = p2;
                p2=p2.next;
            }
           p=p.next; //move pointer in merged list after appending to it 
            
        }
         if(p1!=null){ //still have elements left in p1
                p.next=p1;
            }
            if(p2!=null){
                p.next=p2; //still have elements left in p2
            }
        
        return fh.next;
    }
}
